// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/task/completion": {
            "get": {
                "description": "This endpoint checks if the user has completed the sign-in task based on the wallet address.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task completion"
                ],
                "summary": "Get Task Completion Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Wallet Address",
                        "name": "walletAddress",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task completion status code=\"000000\" message=\"success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/utils.TaskCompletionData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Argument code=\"000006",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "System Error code=\"000002\" message=\"system busy",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/v1/task/signin": {
            "get": {
                "description": "Allows a user to sign in within a specific activity period. Signin count will be incremented and stored in Redis.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SignCount"
                ],
                "summary": "Get signin count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Wallet Address",
                        "name": "walletAddress",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sign Count(1 times per day) code=\"000000\" message=\"success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/utils.SignCountData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Argument code=\"000006\" message=\"invalid argument",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "System Error code=\"000002\" message=\"system busy",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Allows a user to sign in within a specific activity period. Signin count will be incremented and stored in Redis.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SignIn"
                ],
                "summary": "User Signin",
                "parameters": [
                    {
                        "description": "walletAddress: wallet address, signature: signature, data: used for make signature",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code=\"000000\" message=\"success",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Argument code=\"000006\" message=\"invalid argument",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "System Error code=\"000002\" message=\"system busy",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/v1/time": {
            "get": {
                "description": "This endpoint returns the current server time in milliseconds since Unix epoch.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server time"
                ],
                "summary": "Get Server Time",
                "responses": {
                    "200": {
                        "description": "Current server time",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "System busy",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.SignInRequest": {
            "type": "object",
            "required": [
                "data",
                "signature",
                "walletAddress"
            ],
            "properties": {
                "data": {
                    "type": "string",
                    "example": "hello"
                },
                "signature": {
                    "type": "string",
                    "example": "0x4ae2890fa2206807b6d25039b9b992cdd866989e9b6cc58d5a672b0d1c7e34f0760fe83744acd2595e89bab14fe818699231c302185047edc67582041b0c30e401"
                },
                "walletAddress": {
                    "type": "string",
                    "example": "0x5de8477A8A47e7F2c5cE05ad4532861a0AaAc909"
                }
            }
        },
        "utils.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "utils.SignCountData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "utils.TaskCompletionData": {
            "type": "object",
            "properties": {
                "sign": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
